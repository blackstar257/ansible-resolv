name: CI
'on':
  pull_request:
  push:
    branches:
      - master
      - main
  schedule:
    - cron: "0 5 * * 1"
defaults:
  run:
    working-directory: 'blackstar257.resolv'
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v4
        with:
          path: 'blackstar257.resolv'
      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install test dependencies
        run: pip3 install ansible-lint ansible
      - name: Lint code
        run: |
          ansible-lint
  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - ubuntu2204
          - ubuntu2004
          - debian12
          - debian11
          - rockylinux8
          - rockylinux9
          - fedora39
          - fedora40
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v4
        with:
          path: 'blackstar257.resolv'
      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install test dependencies
        run: pip3 install ansible molecule molecule-plugins[docker] docker
      - name: Run Molecule tests
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
  galaxy:
    name: Galaxy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - lint
      - molecule
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v4
        with:
          path: "blackstar257.resolv"
      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Ansible
        run: pip3 install ansible-core
      - name: Trigger a new import on Galaxy
        run: >-
          ansible-galaxy role import --api-key ${{ secrets.GALAXY_API_KEY }} $(echo ${{ github.repository }} | cut -d/ -f1) $(echo ${{ github.repository }} | cut -d/ -f2)
        if: env.GALAXY_API_KEY != null
        env:
          GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}
